package fon.master.onlineshop.gui;

import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.MenuBar.Command;
import com.vaadin.ui.MenuBar.MenuItem;

import fon.master.onlineshop.OnlineshopApplication;
import fon.master.onlineshop.domain.Cart;
import fon.master.onlineshop.domain.Category;
import fon.master.onlineshop.domain.Customer;
import fon.master.onlineshop.domain.Category.Section;
import fon.master.onlineshop.gui.cart.view.CartView;
import fon.master.onlineshop.gui.product.view.ProductList;
import fon.master.onlineshop.logic.Controller;

public class OnlineShopComponent extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private HorizontalSplitPanel productSearchSplit;
	@AutoGenerated
	private ProductList productTable;
	@AutoGenerated
	private Label titleLabel;
	@AutoGenerated
	private MenuBar mainMenu;

	private CartView cartView;
	//	private CartList cartList;

	private LoginComponent loginComponent;

	private Customer loggedCustomer = null;
	private Cart currentCart = null;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public OnlineShopComponent(OnlineshopApplication onlineshopApplication) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// mainMenu
		mainMenu = buildManuBar();
		mainLayout.addComponent(mainMenu, "top:0.0px;left:0.0px;");

		// titleLabel
		titleLabel = new Label();
		titleLabel.setStyleName("titleLabel");
		titleLabel.setImmediate(false);
		titleLabel.setWidth("540px");
		titleLabel.setHeight("40px");
		titleLabel.setValue("Naslov");
		mainLayout.addComponent(titleLabel, "top:40.0px;left:20.0px;");

		loginComponent = new LoginComponent(this);
		mainLayout.addComponent(loginComponent, "top:30.0px;left:700.0px;");

		// productSearchSplit
		productSearchSplit = buildProductSearchSplit();
		mainLayout.addComponent(productSearchSplit, "top:100.0px;left:10.0px;");

		return mainLayout;
	}
	
	private MenuBar buildManuBar(){
		mainMenu = new MenuBar();
		mainMenu.setStyleName("mainMenu");
		mainMenu.setImmediate(false);
		mainMenu.setWidth("100%");
		mainMenu.setHeight("-1px");
		
		Command command1 = new Command() {	
			public void menuSelected(MenuItem selectedItem) {
				Controller.getInstance().showAllProducts();
				productSearchSplit.setFirstComponent(buildProductTable());
			}
		};
		
		mainMenu.addItem("ALL", command1);
		
		for (Section section : Section.values()) {
			List<Category> categories = Controller.getInstance().getCategoriesForSection(section);		
			MenuBar.MenuItem menuItem = mainMenu.addItem(section.toString(), null);	
			for (final Category category : categories) {
				Command command2 = new Command() {	
					public void menuSelected(MenuItem selectedItem) {
						Controller.getInstance().searchByCategory(category);
						productSearchSplit.setFirstComponent(buildProductTable());
					}
				};
				menuItem.addItem(category.getName(), command2);
			}
		}
		
		return mainMenu;
	}
	
	private void initializeCartView(){
		cartView = new CartView(this);
		productSearchSplit.setSecondComponent(cartView);
	}

	@AutoGenerated
	private HorizontalSplitPanel buildProductSearchSplit() {
		// common part: create layout
		productSearchSplit = new HorizontalSplitPanel();
		productSearchSplit.setStyleName("productSearchSplit");
		productSearchSplit.setImmediate(false);
		productSearchSplit.setWidth("90%");
		productSearchSplit.setHeight("90%");
		productSearchSplit.setSplitPosition(70);
		
		productSearchSplit.addComponent(buildProductTable());
		
		return productSearchSplit;
	}
	
	private ProductList buildProductTable(){
		productTable = new ProductList(this);
		productTable.setStyleName("productTable");
		productTable.setImmediate(false);
		productTable.setWidth("100.0%");
		productTable.setHeight("100.0%");
		productTable.setSelectable(true);
		return productTable;
	}

	public boolean isCustomerLoggedIn() {
		return this.loggedCustomer != null;
	}

	public Customer getLoggedCustomer() {
		return loggedCustomer;
	}

	public Cart getCurrentCart() {
		return currentCart;
	}

	public void loginCustomer(Customer customer, Cart currentCart){
		this.loggedCustomer = customer;
		this.currentCart = currentCart;
		initializeCartView();
	}
	
	public void logoutCustomer(){
		productSearchSplit.removeComponent(cartView);
		this.loggedCustomer = null;
	}
	
	
}
